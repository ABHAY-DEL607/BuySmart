document.addEventListener("DOMContentLoaded", function () {
    const authSection = document.getElementById("authSection");
    const priceSection = document.getElementById("priceSection");
    const authMessage = document.getElementById("authMessage");
    const loginButton = document.getElementById("loginButton");
    const registerButton = document.getElementById("registerButton");
    const logoutButton = document.getElementById("logoutButton");
    const pricesElement = document.getElementById("prices");
    const statusElement = document.getElementById("status");
    const saveButton = document.getElementById("saveButton");
    const smartTipElement = document.getElementById("smartTip");

    const API_URL = "http://localhost:5000"; // Update to your production API URL, e.g., "https://api.buysmart.com"
    const WEBSITE_URL = "http://localhost:3000"; // Update to your production website URL, e.g., "https://buysmart.com"

    const smartTips = [
        "Smart Tip: Compare prices across multiple sites!",
        "Smart Tip: Check reviews before buying!",
        "Smart Tip: Look for coupon codes!",
        "Smart Tip: Save more with bulk purchases!",
        "Smart Tip: Check for No Cost EMI on Flipkart!",
        "Smart Tip: Look for Authenticity Guarantee on eBay!"
    ];

    function rotateSmartTip() {
        let index = 0;
        smartTipElement.textContent = smartTips[index];
        setInterval(() => {
            index = (index + 1) % smartTips.length;
            smartTipElement.textContent = smartTips[index];
        }, 5000);
    }

    if (!window.chrome || !chrome.runtime) {
        statusElement.innerText = "Please enable JavaScript in your browser to use this extension.";
        authSection.classList.add("hidden");
        priceSection.classList.remove("hidden");
        smartTipElement.classList.add("hidden");
        return;
    }

    const token = localStorage.getItem("token");
    if (token) {
        authSection.classList.add("hidden");
        priceSection.classList.remove("hidden");
        logoutButton.classList.remove("hidden");
        smartTipElement.classList.add("hidden");
        loadPriceComparison();
    } else {
        rotateSmartTip();
    }

    loginButton.addEventListener("click", () => {
        console.log('Login button clicked, redirecting to:', `${WEBSITE_URL}/login`);
        localStorage.setItem('return_to_extension', 'true');
        chrome.tabs.create({ url: `${WEBSITE_URL}/login` });
    });

    registerButton.addEventListener("click", () => {
        console.log('Register button clicked, redirecting to:', `${WEBSITE_URL}/signup`);
        localStorage.setItem('return_to_extension', 'true');
        chrome.tabs.create({ url: `${WEBSITE_URL}/signup` });
    });

    logoutButton.addEventListener("click", () => {
        localStorage.removeItem("token");
        authSection.classList.remove("hidden");
        priceSection.classList.add("hidden");
        logoutButton.classList.add("hidden");
        smartTipElement.classList.remove("hidden");
        authMessage.innerText = "";
        rotateSmartTip();
    });

    async function loadPriceComparison() {
        chrome.runtime.sendMessage({ action: "getProductData" }, (response) => {
            if (!response || !response.data) {
                statusElement.innerText = "No product data available.";
                return;
            }

            const { productName, productPrice, site, discount, specialOffer } = response.data;
            let priceHTML = `
                <h3>${productName}</h3>
                <p><strong>${site} Price:</strong> ${productPrice}</p>
            `;

            if (discount) {
                priceHTML += <p><strong>Discount:</strong> ${discount}</p>;
            }
            if (specialOffer) {
                priceHTML += <p><strong>Special Offer:</strong> ${specialOffer}</p>;
            }

            if (site.toLowerCase().includes("flipkart")) {
                priceHTML += <p><em>Eligible for Flipkart Plus benefits and No Cost EMI!</em></p>;
            } else if (site.toLowerCase().includes("ebay")) {
                priceHTML += <p><em>Comes with eBay Authenticity Guarantee!</em></p>;
            }

            priceHTML += <p><strong>Comparing Prices...</strong></p>;
            pricesElement.innerHTML = priceHTML;

            chrome.runtime.sendMessage({ action: "comparePrices", data: { productName, site } }, (comparisonResponse) => {
                if (!comparisonResponse || !comparisonResponse.prices) {
                    pricesElement.innerHTML += "<p>Error fetching prices.</p>";
                    return;
                }

                let comparisons = comparisonResponse.prices.map(({ site, price }) => {
                    let comparisonHTML = <p><strong>${site}:</strong> ${price}</p>;
                    return comparisonHTML;
                }).join("");
                pricesElement.innerHTML += comparisons;
                saveButton.classList.remove("hidden");

                saveButton.addEventListener("click", () => {
                    fetch(`${API_URL}/api/prices`, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                            "Authorization": `Bearer ${localStorage.getItem("token")}`
                        },
                        body: JSON.stringify({
                            productName: productName,
                            currentSite: site,
                            currentPrice: productPrice,
                            comparisons: comparisonResponse.prices
                        })
                    })
                    .then(res => res.json())
                    .then(data => {
                        alert("Price history saved successfully!");
                        console.log("Price history saved:", data);
                    })
                    .catch(err => console.error("Error saving history:", err));
                });
            });
        });
    }

    chrome.runtime.onMessageExternal.addListener(function(request, sender, sendResponse) {
        if (request.type === 'LOGIN_SUCCESS' || request.type === 'SIGNUP_SUCCESS') {
            localStorage.setItem('token', request.token);
            authSection.classList.add("hidden");
            priceSection.classList.remove("hidden");
            logoutButton.classList.remove("hidden");
            smartTipElement.classList.add("hidden");
            loadPriceComparison();
        }
    });
});